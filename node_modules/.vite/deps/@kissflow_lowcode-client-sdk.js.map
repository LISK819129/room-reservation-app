{
  "version": 3,
  "sources": ["../../@kissflow/lowcode-client-sdk/dist/kfsdk.es.js"],
  "sourcesContent": ["var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\nvar _listeners, _textEncoder, _textDecoder, _registerComponentAPIs, registerComponentAPIs_fn;\nlet nanoid = (size = 21) => crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n  byte &= 63;\n  if (byte < 36) {\n    id += byte.toString(36);\n  } else if (byte < 62) {\n    id += (byte - 26).toString(36).toUpperCase();\n  } else if (byte > 62) {\n    id += \"-\";\n  } else {\n    id += \"_\";\n  }\n  return id;\n}, \"\");\nconst LISTENER_CMDS = {\n  API: \"API\",\n  GET_CONTEXT: \"GET_CONTEXT\",\n  RETURN: \"RETURN\",\n  GET_FORM_FIELD: \"GET_FORM_FIELD\",\n  UPDATE_FORM: \"UPDATE_FORM\",\n  GET_TABLE: \"GET_TABLE\",\n  GET_TABLE_ROW: \"GET_TABLE_ROW\",\n  ADD_TABLE_ROW: \"ADD_TABLE_ROW\",\n  ADD_TABLE_ROWS: \"ADD_TABLE_ROWS\",\n  DELETE_TABLE_ROW: \"DELETE_TABLE_ROW\",\n  TO_JSON: \"TO_JSON\",\n  GET_TABLE_ROWS: \"GET_TABLE_ROWS\",\n  GET_SELECTED_TABLE_ROWS: \"GET_SELECTED_TABLE_ROWS\",\n  MESSAGE: \"MESSAGE\",\n  CONFIRM: \"CONFIRM\",\n  ALERT: \"ALERT\",\n  REDIRECT: \"REDIRECT\",\n  OPEN_PAGE: \"OPEN_PAGE\",\n  FORMAT_DATE: \"FORMAT_DATE\",\n  FORMAT_DATE_TIME: \"FORMAT_DATE_TIME\",\n  FORMAT_NUMBER: \"FORMAT_NUMBER\",\n  FORMAT_CURRENCY: \"FORMAT_CURRENCY\",\n  FORMAT_BOOLEAN: \"FORMAT_BOOLEAN\",\n  GET_APP_VARIABLE: \"GET_APP_VARIABLE\",\n  SET_APP_VARIABLE: \"SET_APP_VARIABLE\",\n  GET_PAGE_VARIABLE: \"GET_PAGE_VARIABLE\",\n  SET_PAGE_VARIABLE: \"SET_PAGE_VARIABLE\",\n  GET_PAGE_PARAMS: \"GET_PAGE_PARAMS\",\n  GET_ALL_PAGE_PARAMS: \"GET_ALL_PAGE_PARAMS\",\n  PAGE_ON_CLOSE: \"PAGE_ON_CLOSE\",\n  OPEN_POPUP: \"OPEN_POPUP\",\n  GET_POPUP_PARAMS: \"GET_POPUP_PARAMS\",\n  GET_ALL_POPUP_PARAMS: \"GET_ALL_POPUP_PARAMS\",\n  CLOSE_POPUP: \"CLOSE_POPUP\",\n  COMPONENT_GET: \"COMPONENT_GET\",\n  COMPONENT_REFRESH: \"COMPONENT_REFRESH\",\n  COMPONENT_SHOW: \"COMPONENT_SHOW\",\n  COMPONENT_HIDE: \"COMPONENT_HIDE\",\n  COMPONENT_ADD_EVENT_LISTENER: \"COMPONENT_ADD_EVENT_LISTENER\",\n  CC_INITIALIZE: \"CC_INITIALIZE\",\n  CC_WATCH_PARAMS: \"CC_WATCH_PARAMS\",\n  WINDOW_NDEF_READER_NEW: \"WINDOW_NDEF_READER_NEW\",\n  WINDOW_NDEF_READER_SCAN: \"WINDOW_NDEF_READER_SCAN\",\n  WINDOW_NDEF_READER_WRITE: \"WINDOW_NDEF_READER_WRITE\",\n  WINDOW_NDEF_READER_ADD_EVENT_LISTENER: \"WINDOW_NDEF_READER_ADD_EVENT_LISTENER\",\n  WINDOW_NDEF_READER_MAKE_READONLY: \"WINDOW_NDEF_READER_MAKE_READONLY\",\n  WINDOW_NDEF_READER_ABORT_SCAN: \"WINDOW_NDEF_READER_ABORT_SCAN\",\n  DECISION_TABLE_EXECUTE: \"DECISION_TABLE_EXECUTE\",\n  DATAFORM_IMPORT_CSV: \"DATAFORM_IMPORT_CSV\",\n  DATAFORM_OPEN_FORM: \"DATAFORM_OPEN_FORM\",\n  PROCESS_OPEN_FORM: \"PROCESS_OPEN_FORM\",\n  BOARD_IMPORT_CSV: \"BOARD_IMPORT_CSV\",\n  BOARD_OPEN_FORM: \"BOARD_OPEN_FORM\"\n};\nconst EVENT_TYPES = {\n  COMPONENT_ON_MOUNT: \"componentOnMount\",\n  CC_ON_PARAMS_CHANGE: \"onCustomComponentParamsChange\"\n};\nconst DEFAULTS = {\n  POPUP_ID: \"ACTIVE_POP_UP\"\n};\nfunction generateId(prefix = \"lcncsdk\") {\n  return `${prefix}-${nanoid()}`;\n}\nconst globalInstances = {};\nfunction processResponse(req, resp) {\n  if (resp && Object.keys(resp).length === 1 && req.command !== LISTENER_CMDS.API) {\n    let value = Object.values(resp)[0];\n    if (value === \"undefined\")\n      return void 0;\n    return value;\n  } else {\n    return resp;\n  }\n}\nfunction postMessage(args) {\n  if (globalThis.parent && globalThis.parent !== globalThis) {\n    globalThis.parent.postMessage(args, \"*\");\n  } else {\n    globalThis.postMessage(args);\n  }\n}\nfunction onMessage(event) {\n  if (event.origin !== globalThis.location.origin) {\n    const data = event.data;\n    if (data == null ? void 0 : data.isEvent) {\n      const { target, eventParams, eventName, eventConfig = {} } = data;\n      let targetInstance = globalInstances[target];\n      targetInstance._dispatchEvent(eventName, eventParams);\n      if (eventConfig.once) {\n        targetInstance._removeEventListener(eventName);\n      }\n      return;\n    }\n    let { _req: req, resp } = data;\n    if (req == null ? void 0 : req._id) {\n      let targetInstance = globalInstances[req._id];\n      targetInstance._dispatchMessageEvents(req, resp);\n    }\n  }\n}\nglobalThis.addEventListener(\"message\", onMessage);\nclass EventBase {\n  constructor() {\n    __privateAdd(this, _listeners, void 0);\n    __privateSet(this, _listeners, {});\n  }\n  _addEventListener(eventName, callBack) {\n    var _a;\n    __privateGet(this, _listeners)[eventName] = ((_a = __privateGet(this, _listeners)) == null ? void 0 : _a[eventName]) || [];\n    __privateGet(this, _listeners)[eventName].push(callBack);\n  }\n  _removeEventListener(eventName, callBack) {\n    if (callBack) {\n      let index2 = __privateGet(this, _listeners)[eventName].findIndex(callBack);\n      index2 > -1 && __privateGet(this, _listeners)[eventName].splice(index2, 1);\n      return;\n    }\n    Reflect.deleteProperty(__privateGet(this, _listeners), eventName);\n  }\n  _dispatchEvent(eventName, eventParams) {\n    if (Array.isArray(__privateGet(this, _listeners)[eventName])) {\n      __privateGet(this, _listeners)[eventName].forEach(\n        (callBack) => callBack(eventParams)\n      );\n      return true;\n    }\n    return false;\n  }\n  _dispatchMessageEvents(req, resp) {\n    let target = req._id;\n    if (Array.isArray(__privateGet(this, _listeners)[target])) {\n      __privateGet(this, _listeners)[target].forEach((listener) => {\n        try {\n          let processedResp = processResponse(req, resp);\n          listener(processedResp);\n        } catch (err) {\n          console.error(\"Message callback error: \", err);\n        }\n      });\n      this._removeEventListener(target);\n    }\n  }\n}\n_listeners = new WeakMap();\nclass BaseSDK extends EventBase {\n  _postMessageAsync(command, args, hasCallBack, callBack) {\n    return new Promise((resolve, reject) => {\n      const _id = generateId(command.toLowerCase());\n      postMessage({ _id, command, ...args });\n      globalInstances[_id] = this;\n      this._addEventListener(_id, async (data) => {\n        if ((data == null ? void 0 : data.errorMessage) || (data == null ? void 0 : data.isError)) {\n          reject(data);\n        } else {\n          if (hasCallBack && callBack) {\n            data = await callBack(data);\n          }\n          resolve(data);\n        }\n      });\n    });\n  }\n  _postMessage(command, args, callBack) {\n    const _id = generateId(command.toLowerCase());\n    postMessage({ _id, command, ...args });\n    if (callBack) {\n      this._addEventListener(args.eventName, callBack);\n    }\n  }\n  _postMessageSync(command, args) {\n    let intialValue = 0;\n    const _id = generateId(command.toLowerCase());\n    let data = { _id, command, ...args };\n    let atomics = new AtomicsHandler();\n    atomics.reset();\n    atomics.store(0, intialValue);\n    atomics.encodeData(1, data);\n    postMessage(atomics.sab);\n    atomics.wait(0, intialValue, 1e4);\n    let decodedData = atomics.decodeData();\n    let { _req: req, resp } = decodedData;\n    let processedResp = processResponse(req, resp);\n    if (processedResp == null ? void 0 : processedResp.isError) {\n      throw new Error(`Error: ${JSON.stringify(processedResp, null, 2)}`);\n    }\n    return processedResp;\n  }\n}\nlet sharedArrayBufferInstance;\nclass AtomicsHandler {\n  constructor() {\n    __privateAdd(this, _textEncoder, void 0);\n    __privateAdd(this, _textDecoder, void 0);\n    __privateSet(this, _textEncoder, new TextEncoder());\n    __privateSet(this, _textDecoder, new TextDecoder());\n    sharedArrayBufferInstance = sharedArrayBufferInstance || new SharedArrayBuffer(1024 * 1024);\n    this.sab = sharedArrayBufferInstance;\n    this.int32Array = new Int32Array(this.sab);\n  }\n  load(index2 = 0) {\n    return Atomics.load(this.int32Array, index2);\n  }\n  store(index2 = 0, data) {\n    return Atomics.store(this.int32Array, index2, data);\n  }\n  reset() {\n    return this.int32Array.fill(0);\n  }\n  notify(index2 = 0, count = 1) {\n    return Atomics.notify(this.int32Array, index2, count);\n  }\n  wait(index2, value, timeout) {\n    return Atomics.wait(this.int32Array, index2, value, timeout);\n  }\n  encodeData(index2 = 0, data) {\n    const replacer = (key, value) => value === void 0 ? \"undefined\" : value;\n    let string = JSON.stringify(data, replacer);\n    let encodedData = __privateGet(this, _textEncoder).encode(string);\n    this.int32Array.set(encodedData, index2);\n    return this.int32Array;\n  }\n  decodeData() {\n    let uInt8Array = new Uint8Array(this.int32Array);\n    let string = __privateGet(this, _textDecoder).decode(uInt8Array).replaceAll(/\\x00/g, \"\");\n    return JSON.parse(string);\n  }\n}\n_textEncoder = new WeakMap();\n_textDecoder = new WeakMap();\nclass Client extends BaseSDK {\n  showInfo(message) {\n    return super._postMessageAsync(LISTENER_CMDS.MESSAGE, { message });\n  }\n  showConfirm(args) {\n    return super._postMessageAsync(LISTENER_CMDS.CONFIRM, {\n      data: {\n        title: args.title,\n        content: args.content,\n        okText: args.okText || \"Ok\",\n        cancelText: args.cancelText || \"Cancel\"\n      }\n    });\n  }\n  redirect(url) {\n    return super._postMessageAsync(LISTENER_CMDS.REDIRECT, { url });\n  }\n}\nclass Formatter extends BaseSDK {\n  toDate(date) {\n    return this._postMessageAsync(LISTENER_CMDS.FORMAT_DATE, {\n      date\n    });\n  }\n  toDateTime(date) {\n    return this._postMessageAsync(LISTENER_CMDS.FORMAT_DATE_TIME, {\n      date\n    });\n  }\n  toNumber(value) {\n    return this._postMessageAsync(LISTENER_CMDS.FORMAT_NUMBER, {\n      value\n    });\n  }\n  toCurrency(value, currencyCode) {\n    return this._postMessageAsync(LISTENER_CMDS.FORMAT_CURRENCY, {\n      value,\n      currencyCode\n    });\n  }\n  toBoolean(value) {\n    return this._postMessageAsync(LISTENER_CMDS.FORMAT_BOOLEAN, {\n      value\n    });\n  }\n}\nclass Component extends BaseSDK {\n  constructor(props) {\n    super();\n    __privateAdd(this, _registerComponentAPIs);\n    this._id = props.componentId;\n    this.type = \"Component\";\n    globalInstances[this._id] = this;\n    __privateMethod(this, _registerComponentAPIs, registerComponentAPIs_fn).call(this, props.componentMethods);\n  }\n  onMount(callback) {\n    this._postMessage(\n      LISTENER_CMDS.COMPONENT_ADD_EVENT_LISTENER,\n      {\n        id: this._id,\n        eventName: EVENT_TYPES.COMPONENT_ON_MOUNT,\n        eventConfig: {\n          once: true\n        }\n      },\n      callback\n    );\n  }\n  refresh() {\n    return this._postMessageAsync(LISTENER_CMDS.COMPONENT_REFRESH, {\n      id: this._id\n    });\n  }\n  show() {\n    return this._postMessageAsync(LISTENER_CMDS.COMPONENT_SHOW, {\n      id: this._id\n    });\n  }\n  hide() {\n    return this._postMessageAsync(LISTENER_CMDS.COMPONENT_HIDE, {\n      id: this._id\n    });\n  }\n}\n_registerComponentAPIs = new WeakSet();\nregisterComponentAPIs_fn = function(componentAPIs) {\n  componentAPIs == null ? void 0 : componentAPIs.forEach((Api) => {\n    this[Api.name] = (...args) => {\n      if (Api.type === \"method\") {\n        return this._postMessageAsync(`COMPONENT_${Api.name}`, {\n          id: this._id,\n          parameters: args\n        });\n      } else if (Api.type === \"event\") {\n        this._postMessage(\n          LISTENER_CMDS.COMPONENT_ADD_EVENT_LISTENER,\n          {\n            id: this._id,\n            eventName: Api.name,\n            eventConfig: args[1]\n          },\n          args[0]\n        );\n      }\n    };\n  });\n};\nclass CustomComponent extends BaseSDK {\n  constructor(id) {\n    super();\n    this._id = id;\n    this.type = \"CustomComponent\";\n    globalInstances[this._id] = this;\n  }\n  watchParams(callBack) {\n    this._postMessage(\n      LISTENER_CMDS.CC_WATCH_PARAMS,\n      {\n        id: this._id,\n        eventName: EVENT_TYPES.CC_ON_PARAMS_CHANGE,\n        eventConfig: {\n          once: false\n        }\n      },\n      callBack\n    );\n  }\n}\nclass Popup extends BaseSDK {\n  constructor(props) {\n    super();\n    this.type = \"Popup\";\n    this._id = props.popupId || DEFAULTS.POPUP_ID;\n  }\n  getParameter(key) {\n    return this._postMessageAsync(LISTENER_CMDS.GET_POPUP_PARAMS, {\n      key,\n      popupId: this._id\n    });\n  }\n  getAllParameters() {\n    return this._postMessageAsync(LISTENER_CMDS.GET_ALL_POPUP_PARAMS, {\n      popupId: this._id\n    });\n  }\n  close() {\n    return this._postMessageAsync(LISTENER_CMDS.CLOSE_POPUP, {});\n  }\n  getComponent(componentId) {\n    return this._postMessageAsync(\n      LISTENER_CMDS.COMPONENT_GET,\n      { componentId },\n      true,\n      (data) => {\n        return new Component(data);\n      }\n    );\n  }\n}\nclass Page extends BaseSDK {\n  constructor(props, isCustomComponent = false) {\n    super();\n    this.type = \"Page\";\n    this.popup = new Popup({});\n    this._id = props.pageId;\n  }\n  getParameter(key) {\n    return this._postMessageAsync(LISTENER_CMDS.GET_PAGE_PARAMS, {\n      key\n    });\n  }\n  getAllParameters() {\n    return this._postMessageAsync(LISTENER_CMDS.GET_ALL_PAGE_PARAMS, {\n      pageId: this._id\n    });\n  }\n  getVariable(key) {\n    return this._postMessageAsync(LISTENER_CMDS.GET_PAGE_VARIABLE, {\n      key\n    });\n  }\n  setVariable(key, value) {\n    return this._postMessageAsync(LISTENER_CMDS.SET_PAGE_VARIABLE, {\n      key,\n      value\n    });\n  }\n  openPopup(popupId, popupParams) {\n    return this._postMessageAsync(LISTENER_CMDS.OPEN_POPUP, {\n      popupId,\n      popupParams\n    });\n  }\n  getComponent(componentId) {\n    return this._postMessageAsync(\n      LISTENER_CMDS.COMPONENT_GET,\n      { componentId },\n      true,\n      (data) => new Component(data)\n    );\n  }\n}\nclass DecisionTable extends BaseSDK {\n  constructor(flowId) {\n    super();\n    this.flowId = flowId;\n  }\n  evaluate(payload) {\n    return this._postMessageAsync(LISTENER_CMDS.DECISION_TABLE_EXECUTE, {\n      flowId: this.flowId,\n      payload\n    });\n  }\n}\nclass Dataform extends BaseSDK {\n  constructor(flowId) {\n    super();\n    this._id = flowId;\n  }\n  importCSV(defaultValues) {\n    return this._postMessageAsync(LISTENER_CMDS.DATAFORM_IMPORT_CSV, {\n      flowId: this._id,\n      defaultValues\n    });\n  }\n  openForm(item) {\n    if (!item._id) {\n      return Promise.reject({\n        message: \"Instance Id (_id) is required\"\n      });\n    }\n    return this._postMessageAsync(LISTENER_CMDS.DATAFORM_OPEN_FORM, {\n      flowId: this._id,\n      itemId: item._id\n    });\n  }\n}\nclass Board extends BaseSDK {\n  constructor(flowId) {\n    super();\n    this._id = flowId;\n  }\n  importCSV(defaultValues) {\n    return this._postMessageAsync(LISTENER_CMDS.BOARD_IMPORT_CSV, {\n      flowId: this._id,\n      defaultValues\n    });\n  }\n  openForm(item) {\n    if (!item._id) {\n      return Promise.reject({\n        message: \"Instance Id (_id) is required\"\n      });\n    }\n    return this._postMessageAsync(LISTENER_CMDS.BOARD_OPEN_FORM, {\n      flowId: this._id,\n      itemId: item._id,\n      viewId: item._view_id\n    });\n  }\n}\nclass Process extends BaseSDK {\n  constructor(flowId) {\n    super();\n    this._id = flowId;\n  }\n  openForm(item) {\n    if (!item._id || !item._activity_instance_id) {\n      return Promise.reject({\n        message: \"Instance Id(_id) and Activity Instance Id(_activity_instance_id) are required\"\n      });\n    }\n    return this._postMessageAsync(LISTENER_CMDS.PROCESS_OPEN_FORM, {\n      flowId: this._id,\n      instanceId: item._id,\n      activityInstanceId: item._activity_instance_id\n    });\n  }\n}\nclass Application extends BaseSDK {\n  constructor(props, isCustomComponent = false) {\n    super();\n    this._id = props.appId;\n    this.page = new Page(props);\n  }\n  getVariable(key) {\n    return this._postMessageAsync(LISTENER_CMDS.GET_APP_VARIABLE, {\n      key\n    });\n  }\n  setVariable(key, value) {\n    return this._postMessageAsync(LISTENER_CMDS.SET_APP_VARIABLE, {\n      key,\n      value\n    });\n  }\n  openPage(pageId, pageParams) {\n    return this._postMessageAsync(LISTENER_CMDS.OPEN_PAGE, {\n      pageId,\n      pageParams\n    });\n  }\n  getDecisionTable(flowId) {\n    return new DecisionTable(flowId);\n  }\n  getDataform(flowId) {\n    return new Dataform(flowId);\n  }\n  getBoard(flowId) {\n    return new Board(flowId);\n  }\n  getProcess(flowId) {\n    return new Process(flowId);\n  }\n}\nclass CustomComponentSDK extends BaseSDK {\n  constructor() {\n    super();\n  }\n  api(url, args) {\n    return this._postMessageAsync(LISTENER_CMDS.API, { url, args: args || {} });\n  }\n  initialize() {\n    if (globalThis.parent && globalThis.parent === globalThis) {\n      return Promise.reject(\n        \"SDK can be initialized only inside the Kissflow platform.\"\n      );\n    }\n    return this._postMessageAsync(\n      LISTENER_CMDS.CC_INITIALIZE,\n      {},\n      true,\n      (data) => {\n        this.app = new Application(data, true);\n        this.page = new Page(data, true);\n        this.context = new CustomComponent(data.componentId);\n        this.client = new Client();\n        this.formatter = new Formatter();\n        this.user = data.user;\n        this.account = data.account;\n        this.env = data.envDetails;\n        return this;\n      }\n    );\n  }\n  initialise() {\n    return this.initialize();\n  }\n}\nvar index = new CustomComponentSDK();\nexport { index as default };\n"],
  "mappings": "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",
  "names": []
}
